# Cấu hình chung cho một kết nối cơ sở dữ liệu duy nhất.

[alembic]
output_encoding = utf-8
# Đường dẫn tới thư mục chứa các script migration
script_location = migrations

# Mẫu dùng để tạo tên file migration; Giá trị mặc định là %%(rev)s_%%(slug)s
# Bỏ comment dòng dưới nếu bạn muốn tên file có thêm ngày giờ tạo
# Xem thêm tại https://alembic.sqlalchemy.org/en/latest/tutorial.html#editing-the-ini-file
# để biết các token có thể dùng
# file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# Đường dẫn sys.path, sẽ được thêm vào sys.path nếu có.
# Mặc định là thư mục hiện tại.
prepend_sys_path = .

# Múi giờ dùng khi ghi ngày vào file migration
# cũng như tên file.
# Nếu chỉ định, cần cài thêm thư viện python-dateutil
# (cài bằng lệnh: pip install alembic[tz])
# Giá trị là chuỗi truyền vào dateutil.tz.gettz()
# Để trống sẽ dùng giờ local
# timezone =

# Độ dài tối đa của trường "slug"
# truncate_slug_length = 40

# Đặt thành 'true' để chạy environment khi dùng lệnh 'revision',
# bất kể có autogenerate hay không
# revision_environment = false

# Đặt thành 'true' để cho phép file .pyc và .pyo không có file .py gốc
# được nhận diện là revision trong thư mục versions/
# sourceless = false

# Cấu hình vị trí lưu các file version; Mặc định là migrations/versions.
# Nếu dùng nhiều thư mục version, các revision đầu tiên phải chỉ định --version-path.
# Ký tự phân tách dùng ở đây phải giống với "version_path_separator" bên dưới.
# version_locations = %(here)s/bar:%(here)s/bat:migrations/versions

# Ký tự phân tách version path; Như trên, đây là ký tự dùng để tách version_locations.
# Mặc định trong file alembic.ini mới là "os", dùng os.pathsep.
# Nếu không có, sẽ tách theo khoảng trắng hoặc dấu phẩy (cách cũ).
# Giá trị hợp lệ:
#
# version_path_separator = :
# version_path_separator = ;
# version_path_separator = space
version_path_separator = os  # Dùng os.pathsep. Cấu hình mặc định cho dự án mới.

# Đặt thành 'true' để tìm kiếm file nguồn đệ quy
# trong mỗi thư mục "version_locations"
# Mới trong Alembic version 1.10
# recursive_version_locations = false

# Mã hóa đầu ra khi ghi file revision từ script.py.mako
# output_encoding = utf-8

#sqlalchemy.url = sqlite:///./aichatbot.db
# Địa chỉ kết nối tới cơ sở dữ liệu (nên cấu hình qua biến môi trường .env)

[post_write_hooks]
# post_write_hooks định nghĩa các script hoặc hàm Python sẽ chạy
# sau khi tạo file revision mới. Xem tài liệu để biết thêm chi tiết và ví dụ

# Định dạng code bằng "black" - dùng console_scripts runner, với entrypoint "black"
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# Kiểm tra/lint code và tự động sửa bằng "ruff" - dùng exec runner, chạy binary
# hooks = ruff
# ruff.type = exec
# ruff.executable = %(here)s/.venv/bin/ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME

# Cấu hình ghi log
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S